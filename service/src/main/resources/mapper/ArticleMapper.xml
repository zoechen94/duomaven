<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zoe.mapper.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.zoe.entity.Article" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="article" property="article" jdbcType="VARCHAR" />
    <result column="auther" property="auther" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_date, deleted, modify_date, address, article, auther
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from article
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from article
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zoe.entity.Article" >
    insert into article (id, create_date, deleted, 
      modify_date, address, article, 
      auther)
    values (#{id,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}, 
      #{modifyDate,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, #{article,jdbcType=VARCHAR}, 
      #{auther,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zoe.entity.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="article != null" >
        article,
      </if>
      <if test="auther != null" >
        auther,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="article != null" >
        #{article,jdbcType=VARCHAR},
      </if>
      <if test="auther != null" >
        #{auther,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zoe.entity.Article" >
    update article
    <set >
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="article != null" >
        article = #{article,jdbcType=VARCHAR},
      </if>
      <if test="auther != null" >
        auther = #{auther,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zoe.entity.Article" >
    update article
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      article = #{article,jdbcType=VARCHAR},
      auther = #{auther,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select * from article
  </select>
</mapper>